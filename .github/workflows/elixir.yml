name: elixir_ci

on: [push, pull_request]

jobs:
  build:

    runs-on: ubuntu-18.04

    steps:
    - uses: actions/checkout@v1
    - name: Shutdown Ubuntu MySQL (SUDO)
      run: sudo service mysql stop
    - uses: harmon758/postgresql-action@v1.0.0
      with:
        postgresql version: '12.1'
        postgresql db: phoenix_example_test
        postgresql user: postgres
        postgresql password: postgres
    - uses: getong/mariadb-action@v1.1
      with:
        host port: 3306
        container port: 3306
        mariadb version: 10.4.11
        mysql database: test_db
        mysql root password: zan3Kie1
    - uses: getong/redis-action@v1
      with:
        redis version: '5.0.7'
        host port: 6379
        container port: 6379
        redis password: 'TaeT9ahc'
    - uses: getong/rabbitmq-action@v1.2
      with:
        rabbitmq version: '3.8.3-management-alpine'
        host port: 5672
        rabbitmq user: 'user'
        rabbitmq password: 'Anaith7x'
        rabbitmq vhost: 'vhost_name'
    - uses: getong/elasticsearch-action@v1
      with:
        elasticsearch version: '7.6.1'
        host port: 9200
        container port: 9200
        discovery type: 'single-node'
    - uses: getong/mongo-action@v1.1
      with:
        mongo version: '4.2-bionic'
        host port: 27017
        mongo username: 'mongoadmin'
        mongo password: 'Iushahb0'
    - name: Install Dependencies
      run: |
        wget http://packages.erlang-solutions.com/erlang-solutions_1.0_all.deb
        sudo dpkg -i erlang-solutions_1.0_all.deb
        ## see https://github.community/t5/GitHub-Actions/ubuntu-latest-Apt-repository-list-issues/td-p/41122 for more info
        sudo apt-get update || echo "ok"
        sudo apt-get install -y erlang wget unzip nodejs
        wget -c https://github.com/elixir-lang/elixir/releases/download/v1.10.2/Precompiled.zip
        mkdir elixir
        unzip Precompiled.zip -d elixir
        export PATH=./elixir/bin/:$PATH
        mix local.rebar --force
        mix local.hex --force
        mix deps.get
    - name: Run Tests
      run: |
        export PATH=./elixir/bin/:$PATH
        MIX_ENV=test mix compile
        mix test
        cd assets
        sudo npm install -g yarn
        sudo chown -R $USER:$GROUP ~/.npm
        sudo chown -R $USER:$GROUP ~/.config
        # sudo chown -R $USER:$GROUP ~/.yarn
        yarn install
        node node_modules/webpack/bin/webpack.js --mode development
        cd ..
        MIX_ENV=prod mix compile
        MIX_ENV=prod mix phx.digest
        MIX_ENV=prod mix distillery.init
        MIX_ENV=prod mix distillery.release
        mix credo
        #./_build/prod/rel/phoenix_example/bin/phoenix_example start
        #./_build/prod/rel/phoenix_example/bin/phoenix_example ping
        #./_build/prod/rel/phoenix_example/bin/phoenix_example stop
